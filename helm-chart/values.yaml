name: k8s-s3-backup

image:
  registry: docker.io
  repository: apolovenkov
  name: k8s-s3-backup
  tag: latest

secrets:
  enabled: true
  aws:
    name: ""
    aws_access_key_id: ""
    aws_access_key: ""

rbac:
  enabled: true
  name: k8s-s3-backup
  namespace: default
  

cronjobs:
  backup:
    serviceAccountName: "{{ $.Values.rbac.name }}"
    schedule: "0 0 * * *"
    restartPolicy: Never
    imagePullPolicy: Always
    image:
      registry: "{{ $.Values.image.registry }}"
      repository: "{{ $.Values.image.repository }}"
      name: "{{ $.Values.image.name }}"
      tag: "{{ $.Values.image.tag }}"
    resources:
      requests:
        cpu: '1'
        memory: "1Gi"
      limits:
        cpu: '1'
        memory: "1Gi"
    env:
      - name: TZ
        value: Europe/Moscow
      - name: AWS_SECRET_ACCESS_KEY
        valueFrom:
           secretKeyRef:
             name: "{{ $.Values.secrets.aws.name }}"
             key: aws_secret_access_key
      - name: AWS_ACCESS_KEY_ID
        valueFrom:
           secretKeyRef:
             name: "{{ $.Values.secrets.aws.name }}"
             key: aws_secret_access_key_id
      - name: AWS_S3_ENDPOINT_URL
        value: ""
      - name: AWS_DEFAULT_REGION
        value: "eu-west-1"
      - name: AWS_BUCKET_NAME
        value: ""
      - name: AWS_BUCKET_BACKUP_PATH
        value: ""
      - name: BACKUP_TTL
        value: "7d" # пример: хранить 7 дней
      - name: BACKUP_NAME_PREFIX
        value: "backup"
      - name: KUBE_NAMESPACE
        value: "{{ $.Values.rbac.namespace }}"
      - name: WORKLOAD_KIND
        value: "deployment" # deployment|statefulset|pod (или пусто при использовании селектора)
      - name: WORKLOAD_NAME
        value: ""
      - name: POD_LABEL_SELECTOR
        value: "" # пример: app=myapp,component=api
      - name: CONTAINER
        value: "" # пусто => авто-детект, если контейнер один
      - name: SRC_PATH
        value: "/data"
